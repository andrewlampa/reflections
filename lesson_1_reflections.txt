How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    You can see the changes in the newer version without having to manually
    search for it. Helps especially if the code is thick.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can look back on your older files and see where you can improve on
    further.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Auto save might save when you're in the middle of typing, making versions
    that make no logical sense.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git saves files that require tracking across multiple files in case a
    change is made, that would affect all of the files, in one of them.

How can you use the commands git log and git diff to view the history of files?

    To go back and easily reference changes that were made in specific versions.

How might using version control make you more confident to make changes that
could break something?

    You can go back to a previous commit before the 'break' was introduced.

Now that you have your workspace set up, what do you want to try using Git for?

    To allow for freedom of mistakes!
